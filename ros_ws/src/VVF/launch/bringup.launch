<?xml version="1.0"?>
<launch>
    <!-- Argument for the world file -->
    <arg name="use_sim_time" default="true" />
    <arg name="gui" default="true" />
    <arg name="headless" default="false" />
    <arg name="prefix" default="kinova_arm_"/>
    <arg name="cyclic_data_publish_rate" default="40"/> <!--Hz-->
    <arg name="world_file" default="$(find VVF)/worlds/one_cylinder.world"/>
    <arg name="front_laser" default="false" />
    <arg name="default_config" value="front_laser" if="$(arg front_laser)" />
    <arg name="default_config" value="base" unless="$(arg front_laser)" />
    <!-- end of hack -->
    <!-- Configuration of Jackal which you would like to simulate.
         See jackal_description for details. -->
    <arg name="config" default="$(arg default_config)" />

    <!-- Optionally enable teleop for the simulation -->
    <arg name="joystick" default="true" />

    <!-- Launch Gazebo with the specified world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="debug" value="0" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="use_sim_time" value="$(arg use_sim_time)" />
        <arg name="headless" value="$(arg headless)"/>
        <arg name="world_name" value="$(arg world_file)" />
    </include>

  <arg name="env_runner" value="$(eval 'env_run' if not optenv('OS', 'unknown').lower().startswith('windows') else 'env_run.bat')" />




  <param name="robot_description"
         command="$(find jackal_description)/scripts/$(arg env_runner)
                    $(find jackal_description)/urdf/configs/$(arg config)
                    $(find xacro)/xacro $(find VVF)/urdf/jackal.urdf.xacro
                    --inorder" />



 <include file="$(find jackal_control)/launch/control.launch" />

<rosparam file="$(find VVF)/config/joint_velocity_controllers.yaml" command="load" subst_value="true"/>

 <!-- Spawn Jackal -->
 <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
     args="-urdf -model jackal -param robot_description -x 0 -y 0 -z 1 -R 0 -P 0 -Y 0" />

        <node name="velocity_controllers_spawner" pkg="controller_manager" type="spawner" args="
    kinova_arm_joint_1_velocity_controller
    kinova_arm_joint_2_velocity_controller
    kinova_arm_joint_3_velocity_controller
    kinova_arm_joint_4_velocity_controller
    kinova_arm_joint_5_velocity_controller
    kinova_arm_joint_6_velocity_controller
"/>


<!-- Start robot state publisher -->
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
        respawn="false" output="screen" />

</launch>